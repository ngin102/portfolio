{"ast":null,"code":"/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nvar setProps = function setProps(_ref) {\n  var _ref$strings = _ref.strings,\n    strings = _ref$strings === void 0 ? ['Put your strings here...', 'and Enjoy!'] : _ref$strings,\n    _ref$typeSpeed = _ref.typeSpeed,\n    typeSpeed = _ref$typeSpeed === void 0 ? 100 : _ref$typeSpeed,\n    _ref$backSpeed = _ref.backSpeed,\n    backSpeed = _ref$backSpeed === void 0 ? 50 : _ref$backSpeed,\n    _ref$backDelay = _ref.backDelay,\n    backDelay = _ref$backDelay === void 0 ? 500 : _ref$backDelay,\n    _ref$startDelay = _ref.startDelay,\n    startDelay = _ref$startDelay === void 0 ? 500 : _ref$startDelay,\n    _ref$cursorChar = _ref.cursorChar,\n    cursorChar = _ref$cursorChar === void 0 ? '|' : _ref$cursorChar,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? false : _ref$placeholder,\n    _ref$showCursor = _ref.showCursor,\n    showCursor = _ref$showCursor === void 0 ? true : _ref$showCursor,\n    _ref$disableBackTypin = _ref.disableBackTyping,\n    disableBackTyping = _ref$disableBackTypin === void 0 ? false : _ref$disableBackTypin,\n    _ref$onFinished = _ref.onFinished,\n    onFinished = _ref$onFinished === void 0 ? function () {} : _ref$onFinished,\n    _ref$loop = _ref.loop,\n    loop = _ref$loop === void 0 ? true : _ref$loop;\n  return {\n    strings: strings,\n    typeSpeed: typeSpeed,\n    backSpeed: backSpeed,\n    cursorChar: cursorChar,\n    backDelay: backDelay,\n    placeholder: placeholder,\n    startDelay: startDelay,\n    showCursor: showCursor,\n    loop: loop,\n    disableBackTyping: disableBackTyping,\n    onFinished: onFinished\n  };\n};\nexport var init = function init(element, properties) {\n  var i = 0,\n    l,\n    STRINGS_TO_ITERATE;\n  var typewrite = function typewrite(strings, props) {\n    if (i === l) if (props.loop) i = 0;\n    setTimeout(function () {\n      typeString(strings[i], props);\n    }, props.startDelay);\n  };\n  var typeString = function typeString(str, props) {\n    var index = 0,\n      strLen = str.length;\n    var intervalID = setInterval(function () {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  };\n  var onStringTyped = function onStringTyped(id, props) {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished();\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(function () {\n      return eraseString(props);\n    }, props.backDelay);\n  };\n  var eraseString = function eraseString(props) {\n    var str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    var intervalID = setInterval(function () {\n      props.placeholder ? element.placeholder = element.placeholder.substr(0, --strLen) : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  };\n  var onStringErased = function onStringErased(id, props) {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  };\n  var setCursor = function setCursor(element, props) {\n    var cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  };\n  var startTyping = function startTyping(prop) {\n    var props = setProps(prop || {});\n    var strings = props.strings;\n    STRINGS_TO_ITERATE = strings;\n    l = strings.length;\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if (props.showCursor) setCursor(element, props);\n    typewrite(strings, props);\n  };\n  return startTyping(properties);\n};","map":null,"metadata":{},"sourceType":"module"}